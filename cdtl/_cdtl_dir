#!/usr/bin/env bash

source "$CLYDESH_HOME/utils.sh"

replacements="{}"
dir="$PWD"

while [[ "$#" -gt 0 ]]; do
  case $1 in
    # check for flags that are of the format -k=v
    -*=*)
      key=$(echo "${1%=*}" | cut -d '-' -f 2)
      value=${1#*=}
      replacements=$(echo "$replacements" | jq --arg key "$key" --arg value "$value" '.[$key] = $value')
      shift
      ;;
    # check for flags of the format -k v
    -*)
      case $2 in
        -*)
          # ignore if this is just a flag, unless useful
          shift
          ;;
        *)
          if [[ -z $2 ]]; then
            # ignore since this is just a flag
            shift
          else
            key=$(printf "%s" "$1" | tr -d '-')
            replacements=$(echo "$replacements" | jq --arg key "$key" --arg value "$2" '.[$key] = $value')
            shift 2
          fi
      esac
      ;;
    *)
      dir="$1"
      shift
      ;;
  esac
done

template=$(_cdtl_template "$dir")

groups=$(echo "$template" | jq -r ".groups")
matched=$(echo "$template" | jq ".matched")

if [[ $CDTL_DEBUG == "true" ]]; then
  >&2 echo "changing dir template: $template"
  >&2 echo "with replacement: $replacements"
fi

function join_by { local IFS="$1"; shift; echo "$*"; }

path_tokens=()
for g in $groups; do
  rep=$(echo "$replacements" | jq -r ".$g")
  if [[ -z $rep ]] || [[ $rep == "null" ]]; then
    old_value=$(echo "$matched" | jq -r ".$g")
    path_tokens+=("$old_value")
  else
    path_tokens+=("$(t-green "$rep")")
  fi
done

join_by / ${path_tokens[*]}
