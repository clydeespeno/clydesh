#!/usr/bin/env bash

# default cache is 5 mins
cache_ttl=${KUBE_COMPLETION_CACHE_TTL:-300}
invalidate=${KUBE_COMPLETION_CACHE_INVALIDATE:-false}
for i in "$@"; do
  case $i in
    --ttl=*)
      cache_ttl="${i#*=}"
      shift
      ;;
    --invalidate)
      invalidate=true
      shift
      ;;
    --debug)
      export K8_DEBUG=true
      shift
      ;;
    *)
      resource=$i
      shift
      ;;
  esac
done

if [[ $resource == "api-resources" ]]; then
  cache_file=$KUBE_ARTIFACTS_DIR/cache/"$(_k8_read --target=ctx)_$resource"
else
  cache_file=$KUBE_ARTIFACTS_DIR/cache/"$(_k8_read --target=ctx)_$(_k8_read --target=ns)_$resource"
fi

function invalidate() {
  if [[ -f $cache_file ]]; then
    last_modified_sec=$(echo $(($(date +%s) - $(stat -t %s -f %m -- "$cache_file"))))
    _k8_debug "Invalidate is: $invalidate, and last modified age is $last_modified_sec"
    if [[ $invalidate == true ]] || [[ $last_modified_sec -gt $cache_ttl ]]; then
      _k8_debug "Invalidating cache $cache_file"
      rm $cache_file
    fi
  fi
}

function get_resources() {
  while read -r line; do
    contents=($(echo $line))
    echo "$line" | awk '{print $1}'
    if [[ ${#contents[@]} -eq "5" ]]; then
      echo "$line" | awk '{print $2}' | tr ',' '\n'
    fi
  done < <(KUBE_COMMAND_SHOW=false k api-resources --verbs=list --no-headers)
}

function get() {
  if [[ ! -f $cache_file ]]; then
    _k8_debug "Refreshing cache: $cache_file"
    if [[ $resource == "api-resources" ]]; then
      get_resources > $cache_file
    else
      KUBE_COMMAND_SHOW=false kng $resource --name-only > $cache_file
    fi
  else
    _k8_debug "Getting result from cache $cache_file"
  fi
  cat $cache_file
}

invalidate
get

