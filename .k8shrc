export KUBE_NAMESPACE="default"
[ -f "$HOME/.kubenamespace" ] && export KUBE_NAMESPACE=`cat $HOME/.kubenamespace`

function k-ns() {
  if [ -n "$1" ]; then
    echo "$1" > ~/.kubenamespace
    export KUBE_NAMESPACE="$1"
  else
    cat ~/.kubenamespace
  fi
}

function kn() {
  kubectl -n $KUBE_NAMESPACE $@
}

function k-ex() {
  kn exec -it $@
}

function k-bash() {
  k-ex $@ bash
}

function k-sh() {
  k-ex $@ sh
}

function k-log() {
  kn logs $@
}

function k-pod() {
  kn get pods $@
}

function k-dpod() {
  kn describe pod $@
}

function k-dep() {
  kn get deploy $@
}

function k-ddep() {
  kn describe deploy $@
}

function k-ser() {
  kn get service $@
}

function k-dser() {
  kn describe service $@
}

function k-sec() {
  kn get secret $@
}

function k-dsec() {
  kn describe secret $@
}

function k-watch() {
  watch -n 1 "kubectl -n $KUBE_NAMESPACE get pods | grep $1"
}

function k-sec64() {
  k-sec $1 -o json | jq -r ".data[\"$2\"]" | base64 --decode
}

function _k_pod_completion() {
  local services=`kn get pods | tail -n +2 | awk '{print $1;}'`
  COMPREPLY=($(compgen -W "$services"))
  return 0
}

function _k_deploy_completion() {
  local deploys=`kn get deploy | tail -n +2 | awk '{print $1;}'`
  COMPREPLY=($(compgen -W "$deploys"))
  return 0
}

function _k_service_completion() {
  local servs=`kn get service | tail -n +2 | awk '{print $1;}'`
  COMPREPLY=($(compgen -W "$servs"))
  return 0
}

function _k_secret_completion() {
  local secrets=`kn get secret | tail -n +2 | awk '{print $1;}'`
  COMPREPLY=($(compgen -W "$secrets"))
  return 0
}

complete -F _k_pod_completion k-bash k-sh k-ex k-log k-pod k-dpod
complete -F _k_deploy_completion k-dep k-ddep
complete -F _k_service_completion k-ser k-dser
complete -F _k_secret_completion k-sec k-dsec k-sec64
complete -F __start_kubectl k ka ks kp kn
